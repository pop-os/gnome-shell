From: yun341 <5933468@qq.com>
Date: Thu, 2 Jul 2020 06:54:55 +0800
Subject: gdm: Introduce vmware credential manager for pre-authenticated
 logins

The previous commit implemented a new CredentialManager interface to
facilitate adding additional providers for pre-authenticating the user
at the login screen.

This commit implements a new credential manager using that interface
for vmware deployments.

Closes: https://gitlab.gnome.org/GNOME/gnome-shell/issues/1983

Origin: https://gitlab.gnome.org/GNOME/gnome-shell/-/commit/4ea0fca

Bug-Ubuntu: https://bugs.launchpad.net/bugs/1886592
---
 js/gdm/util.js                |  2 ++
 js/gdm/vmware.js              | 54 +++++++++++++++++++++++++++++++++++++++++++
 js/js-resources.gresource.xml |  1 +
 3 files changed, 57 insertions(+)
 create mode 100644 js/gdm/vmware.js

diff --git a/js/gdm/util.js b/js/gdm/util.js
index ccdc7cf..056ceaf 100644
--- a/js/gdm/util.js
+++ b/js/gdm/util.js
@@ -8,6 +8,7 @@ const Signals = imports.signals;
 const Batch = imports.gdm.batch;
 const Fprint = imports.gdm.fingerprint;
 const OVirt = imports.gdm.oVirt;
+const Vmware = imports.gdm.vmware;
 const Main = imports.ui.main;
 const Params = imports.misc.params;
 const SmartcardManager = imports.misc.smartcardManager;
@@ -152,6 +153,7 @@ var ShellUserVerifier = class {
 
         this._credentialManagers = {};
         this._credentialManagers[OVirt.SERVICE_NAME] = OVirt.getOVirtCredentialsManager();
+        this._credentialManagers[Vmware.SERVICE_NAME] = Vmware.getVmwareCredentialsManager();
 
         for (let service in this._credentialManagers) {
             if (this._credentialManagers[service].token) {
diff --git a/js/gdm/vmware.js b/js/gdm/vmware.js
new file mode 100644
index 0000000..20d57e8
--- /dev/null
+++ b/js/gdm/vmware.js
@@ -0,0 +1,54 @@
+// -*- mode: js; js-indent-level: 4; indent-tabs-mode: nil -*-
+/* exported getVmwareCredentialsManager */
+
+const Gio = imports.gi.Gio;
+const Signals = imports.signals;
+const Credential = imports.gdm.credentialManager;
+
+const dbusPath = '/org/vmware/viewagent/Credentials';
+const dbusInterface = 'org.vmware.viewagent.Credentials';
+
+var SERVICE_NAME = 'gdm-vmwcred';
+
+const VmwareCredentialsIface = '<node> \
+<interface name="' + dbusInterface + '"> \
+<signal name="UserAuthenticated"> \
+    <arg type="s" name="token"/> \
+</signal> \
+</interface> \
+</node>';
+
+
+const VmwareCredentialsInfo = Gio.DBusInterfaceInfo.new_for_xml(VmwareCredentialsIface);
+
+let _vmwareCredentialsManager = null;
+
+function VmwareCredentials() {
+    var self = new Gio.DBusProxy({ g_connection: Gio.DBus.session,
+                                   g_interface_name: VmwareCredentialsInfo.name,
+                                   g_interface_info: VmwareCredentialsInfo,
+                                   g_name: dbusInterface,
+                                   g_object_path: dbusPath,
+                                   g_flags: Gio.DBusProxyFlags.DO_NOT_LOAD_PROPERTIES });
+    self.init(null);
+    return self;
+}
+
+var VmwareCredentialsManager = class VmwareCredentialsManager extends Credential.CredentialManager {
+    constructor() {
+        super(SERVICE_NAME);
+        this._credentials = new VmwareCredentials();
+        this._credentials.connectSignal('UserAuthenticated',
+            (proxy, sender, [token]) => {
+                this.token = token;
+            });
+    }
+};
+Signals.addSignalMethods(VmwareCredentialsManager.prototype);
+
+function getVmwareCredentialsManager() {
+    if (!_vmwareCredentialsManager)
+        _vmwareCredentialsManager = new VmwareCredentialsManager();
+
+    return _vmwareCredentialsManager;
+}
diff --git a/js/js-resources.gresource.xml b/js/js-resources.gresource.xml
index dcdc74e..c4e2c9e 100644
--- a/js/js-resources.gresource.xml
+++ b/js/js-resources.gresource.xml
@@ -7,6 +7,7 @@
     <file>gdm/loginDialog.js</file>
     <file>gdm/oVirt.js</file>
     <file>gdm/credentialManager.js</file>
+    <file>gdm/vmware.js</file>
     <file>gdm/realmd.js</file>
     <file>gdm/util.js</file>
 
