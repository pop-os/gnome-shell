From: Georges Basile Stavracas Neto <georges.stavracas@gmail.com>
Date: Fri, 11 Dec 2020 12:55:23 -0300
Subject: Revert "appDisplay/baseAppView: Cleanup animate()"

This reverts commit cd8269185. It turns out this seemingly
harmless cleanup introduced a regression:

 * Open overview
 * Press Meta+A twice
 * Close overview
 * Press Meta+A
 * Enjoy an invisible grid

Fixes https://gitlab.gnome.org/GNOME/gnome-shell/-/issues/3451

Part-of: <https://gitlab.gnome.org/GNOME/gnome-shell/-/merge_requests/1532>
(cherry picked from commit 99b78d3ee85787e7820484212c5f6a40b9ba1ea9)

Origin: https://gitlab.gnome.org/GNOME/gnome-shell/-/commit/7dc390f4
---
 js/ui/appDisplay.js | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/js/ui/appDisplay.js b/js/ui/appDisplay.js
index 7850c4a..004be08 100644
--- a/js/ui/appDisplay.js
+++ b/js/ui/appDisplay.js
@@ -661,6 +661,7 @@ var BaseAppView = GObject.registerClass({
     }
 
     _doSpringAnimation(animationDirection) {
+        this._grid.opacity = 255;
         this._grid.animateSpring(
             animationDirection,
             Main.overview.dash.showAppsButton);
@@ -678,16 +679,15 @@ var BaseAppView = GObject.registerClass({
     }
 
     animate(animationDirection, onComplete) {
-        const animationDoneId = this._grid.connect('animation-done', () => {
-            this._grid.disconnect(animationDoneId);
-            this._grid.opacity =
-                animationDirection === IconGrid.AnimationDirection.IN
-                    ? 255 : 0;
-            if (onComplete)
+        if (onComplete) {
+            let animationDoneId = this._grid.connect('animation-done', () => {
+                this._grid.disconnect(animationDoneId);
                 onComplete();
-        });
+            });
+        }
 
         this._clearAnimateLater();
+        this._grid.opacity = 255;
 
         if (animationDirection == IconGrid.AnimationDirection.IN) {
             const doSpringAnimationLater = laterType => {
@@ -699,18 +699,18 @@ var BaseAppView = GObject.registerClass({
                     });
             };
 
-            this._grid.opacity = 0;
             if (this._viewIsReady) {
+                this._grid.opacity = 0;
                 doSpringAnimationLater(Meta.LaterType.IDLE);
             } else {
                 this._viewLoadedHandlerId = this.connect('view-loaded',
                     () => {
                         this._clearAnimateLater();
+                        this._grid.opacity = 255;
                         doSpringAnimationLater(Meta.LaterType.BEFORE_REDRAW);
                     });
             }
         } else {
-            this._grid.opacity = 255;
             this._doSpringAnimation(animationDirection);
         }
     }
